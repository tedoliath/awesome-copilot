id: rust-mcp-development
name: Rust MCP Server Development
description: Build high-performance Model Context Protocol servers in Rust using the official rmcp SDK with async/await, procedural macros, and type-safe implementations.
tags: [rust, mcp, model-context-protocol, server-development, sdk, tokio, async, macros, rmcp]
items:
  - path: instructions/rust-mcp-server.instructions.md
    kind: instruction
  - path: prompts/rust-mcp-server-generator.prompt.md
    kind: prompt
  - path: chatmodes/rust-mcp-expert.chatmode.md
    kind: chat-mode
    usage: |
      recommended

      This chat mode provides expert guidance for building MCP servers in Rust.

      This chat mode is ideal for:
      - Creating new MCP server projects with Rust
      - Implementing async handlers with tokio runtime
      - Using rmcp procedural macros for tools
      - Setting up stdio, SSE, or HTTP transports
      - Debugging async Rust and ownership issues
      - Learning Rust MCP best practices with the official rmcp SDK
      - Performance optimization with Arc and RwLock

      To get the best results, consider:
      - Using the instruction file to set context for Rust MCP development
      - Using the prompt to generate initial project structure
      - Switching to the expert chat mode for detailed implementation help
      - Specifying which transport type you need
      - Providing details about what tools or functionality you need
      - Mentioning if you need OAuth authentication

display:
  ordering: manual
  show_badge: true

